ポータブルX68000エミュレータ
PX68K ( Portable (x)keropi PRO-68K )
                                                                     2013/08/31

いろいろなデバイスでX68000エミュレータが動作したら楽しいな、
と思い立ち、このPX68Kを作りはじめました。

「Portable」とは「移植しやすいよ」という意味です。
タブレットやPSP等のポータブルデバイスで動いたらいいな、
という意味もこめています。


PX68Kは以下の成分からできています。

  けんじょさん (http://retropc.net/kenjo/) が
  作成された SHARP X68000エミュレータ WinX68k (通称けろぴー)

  NONAKA Kimihiro さん(http://www.asahi-net.or.jp/~aw9k-nnk/keropi/) が
  けろぴーをUNIX/X11 環境で動作する様に移植した xkeropi

  Stephane Dallongevilleさんが開発したものを、
  NJ氏がPSP用CPS1/CPS2/MVSP/NCDZに組み込んだMC68000 MPUエミュレータ

  cisc氏(cisc@retropc.net)が作成されたFM/PSG音源実装 fmgen
  (詳細はfmgen/readme.txtを参照)
  PX68Kへの実装にあたり、以下の変更を行っています
  ・Sample型をint32からint16に変更
  ・PSP用に11k, 22kから44kデータ作成ロジックを追加


0. 注意事項

  0.1 全機種共通

  とりあえずGTK/X11用に作られていたメニューやらキー入力やらは
  全部取っ払ったので、今のところそれらはないです。
  Joystick対応を行ったので多少遊べる様になったかもしれません。

  0.2 Android版について

  Androidは今回初めての開発につき、作法がまだよくわかりません。
  (Javaのコード一行も書いてないのにAndroidの開発と言えるのか?)
  特に/sdcard/ディレクトリってどのデバイスにもあるの?とか疑問が。

  一応デバッガ経由でのNexus 7、apkをインストールしてdocomo dtabで
  実機での動作確認をしていますが、他機種では動かないかもしれません。
  あと、解像度800x600未満の機種でも多分動きません。

1. 下準備

  1.1 UNIX系の場合

  ・xkeropiと同じ

  1.2 PSPの場合

  ・EBOOT.PBPと同じディレクトリに.keropiというディレクトリを作成し、
    BIOS ROM, フォントファイルを置く

  1.3 Androidの場合

   ・/sdcard/px68k/ ディレクトリを作成し、BIOS ROM, フォントファイルを置く

2. FDイメージの指定法

  2.1 UNIX系の場合

  ・引数で指定します。最初がFDD1, 次がFDD2。

    $ ./xkeropi hoge.xdf hogege.xdf

  2.2 PSPの場合

  ・FDD一枚目として読み込みたいイメージファイルをFDD1.XDFとして、
    EBOOT.PBPと同じディレクトリに置く。
    FDD二枚目の場合はFDD2.XDFとして置く。

  2.3 Androidの場合

  ・FDD一枚目として読み込みたいイメージファイルをFDD1.XDFとして、
    /sdcard/px68k/ ディレクトリに置く。
    FDD二枚目の場合はFDD2.XDFとして置く。

3. ジョイスティック

  3.1 UNIX系の場合

  ・JoyKeyモードを有効にすると、キーボードのカーソルキーでスティック移動、
    zキー、xキーがそれぞれトリガー1, 2に対応します。
    現在UIがないため、~/.keropi/configをエディタで修正する必要がある。

  3.2 PSPの場合

  ・D-padでスティック移動、○ボタン、×ボタンがトリガー1, 2に対応します。

  3.3 Androidの場合

  ・画面左側のD-padっぽいのでスティック移動、画面右側のボタンっぽいのが
    トリガー1, 2に対応します。

4. キーボード

  4.1 UNIX系の場合

  ・アルファベットキーやリターンキー等、ある程度のキーに対応。
    全てのテーブルをまだ書き換えていないので中途半端です。

  4.2 PSPの場合

  ・未実装

  4.3 Androidの場合

  ・未実装

5. サウンド出力

  ・Android/Unixは対応していますが、サンプリング周波数は22050Hz固定です。
    今のところconfigに書いた値は反映されません。UI実装時に考えます。
    現在ADPCMとOPMのみ対応済みで、マーキュリーユニット、MIDIについては
    未対応です。

  ・PSPは今のところサンプリング周波数が11025Hz固定です。

7. その他

  7.1 X68000のメインメモリ

  ・現在2MBにしています。

  7.2 メモリ1MBしか認識していないようですが?

  ・HUMAN68KのSWITCH.Xで指定するのですが、PSPでは現在キーボード入力が
    できません。他のエミュレーターで実行して、sram.datを持ってきてください。

  7.3 キー入力できないのですが?
  7.4 PSPで実行すると動作がものすごく遅いんですけど?
  7.5 PSPで音が出ないのですが?
  7.6 説明の番号が5から7に飛んでるんですけど?

      -> とりあえず現状はそんなものです。すみません。

8. 履歴

   2013/08/02 PSP版Ver0.00リリース
   2013/08/07 Android版Ver0.00リリース
   2013/08/12 256x256, 512x512の場合に画面比率4:3になるように修正 (Unix)
   2013/08/12 256x256画面を横2.666倍、縦2倍の拡大表示に変更 (Unix)
   2013/08/12 画面描写をOpenGL ES 1.1を使用する様に変更 (Android)
   2013/08/17 画面描写をHW Graphics Engineを使用する様に変更 (PSP)
   2013/08/19 ジョイスティックのサポートを追加 (PSP)
   2013/08/20 PSP版Ver.0.01リリース
   2013/08/21 画面タッチによるジョイスティックのサポートを追加 (Android)
   2013/08/22 Android版Ver0.01リリース
   2013/08/29 サウンド出力の追加 (Unix, Android)
   2013/08/29 Android版Ver0.02リリース
   2013/08/30 プチノイズの原因となる、サウンドバッファのunderrunが
              発生しないよう修正 (common)
   2013/08/30 CPUクロックを222MHzから333Mhzに変更 (PSP)
   2013/08/30 サウンド出力の追加 (PSP)
   2013/08/31 PSP版Ver0.02リリース

9. 免責

  本ソフトウェアを使用したことによる、いかなる損害も作者は責任を負いません。
  あくまでも自己責任での使用をお願い致します。


ひっそりぃ(hissorii)/sakahi
http://hissorii.blog45.fc2.com (ひっそりぃドットコム)
http://emuhani.seesaa.net      (えみゅはに - Emulator Hacking 日記)
GitHub: https://github.com/hissorii/px68k
Twitter: @hissorii_com
